{
  "meta": {
    "project": "CallWaiting AI Chat Widget",
    "date": "2025-10-18",
    "prepared_by": "Generated by Software Development Manager"
  },
  "product_overview": "CallWaiting AI Chat Widget is an intelligent floating chat interface embedded in web applications that enables users to interact via voice or text with AI-powered responses generated by GPT-4 and MiniMax text-to-speech (TTS) technology. It offers a seamless, responsive experience with voice recording, transcription, and natural speech output, serving as a professional virtual receptionist or assistant.",
  "core_goals": [
    "Provide users with an intuitive chat interface supporting both text and voice interactions.",
    "Integrate advanced AI capabilities via OpenAI GPT-4 for intelligent, context-aware responses.",
    "Deliver high-quality text-to-speech voice responses through MiniMax TTS integration.",
    "Ensure smooth, error-free user experience with responsive and accessible design.",
    "Enable easy setup and configuration via importable n8n workflows for AI intelligence and TTS capabilities.",
    "Support quick testing and debugging with comprehensive tools and guides.",
    "Facilitate production deployment with security, scalability, and monitoring considerations."
  ],
  "key_features": [
    "Floating chat bubble UI that toggles an expandable chat window with smooth animations and responsive design.",
    "Text chat mode allowing users to type messages and receive instant AI-generated replies with loading indicators.",
    "Voice chat mode supporting microphone recording with visual timer, enabling spoken input and sending voice messages.",
    "AI-powered responses generated by OpenAI GPT-4o-mini, maintaining a professional receptionist tone and concise answers (~100 words).",
    "High-quality MP3 voice responses generated via MiniMax TTS with auto-play functionality and configurable female voice.",
    "Robust webhook integration with n8n cloud workflows managing AI generation and TTS synthesis.",
    "Multiple ready-to-import n8n workflows including simple echo test, full AI + TTS, and production-ready optimizations.",
    "Comprehensive documentation covering setup, troubleshooting, deployment, and testing.",
    "Tools for local testing such as test scripts validating webhook responses and in-browser console debugging.",
    "Security practices including API key management, environment variable usage, CORS and HTTPS enforcement, and rate limiting."
  ],
  "user_flow_summary": [
    "User loads a web page where the floating chat bubble is rendered.",
    "User clicks the chat bubble to open the chat window.",
    "User chooses either text input or activates voice mode by toggling the voice option.",
    "For text, user types a message and sends it; for voice, user records a message via microphone and stops recording to send.",
    "The chat widget sends the user input via HTTP POST to a configured n8n cloud webhook.",
    "The webhook processes input with OpenAI GPT-4 to generate an intelligent response.",
    "The response text is sent to MiniMax TTS API for speech synthesis to produce an audio URL.",
    "The chat widget receives JSON containing text and audio URL, displays the text, and plays the audio automatically.",
    "User can continue the conversation seamlessly with subsequent messages.",
    "If errors occur, the widget displays informative error messages and logs debug info for troubleshooting."
  ],
  "validation_criteria": [
    "The chat bubble appears correctly on the webpage and toggles the chat window on click.",
    "Text input is accepted and triggers AI response generation with a loading indicator.",
    "Voice recording mode activates microphone access, shows recording duration, and sends audio input correctly.",
    "Webhook returns valid JSON containing both 'text' and 'audio_url' fields in response to inputs.",
    "Audio responses auto-play upon receipt without user intervention and are clear and natural sounding.",
    "No errors appear in the browser console during normal interactions.",
    "n8n workflows import without errors and respond correctly to test payloads.",
    "AI responses are relevant, context-aware, and maintain a professional tone with concise length.",
    "Security standards are enforced including environment variables for API keys, CORS restrictions, and HTTPS usage.",
    "Performance requirements met: AI response returned within 3 seconds under typical load.",
    "Comprehensive documentation is available and guides users through setup, testing, and deployment effectively."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Next.js 14",
      "React 18",
      "Tailwind CSS",
      "Supabase",
      "Twilio",
      "Groq SDK",
      "Deepgram",
      "Flutterwave",
      "OpenAI",
      "Lucide React",
      "n8n"
    ],
    "features": [
      {
        "name": "Landing Page",
        "description": "Main marketing landing page with hero section, pricing, and conversion elements",
        "files": [
          "app/page.tsx",
          "app/layout.tsx",
          "app/globals.css",
          "components/PricingSection.tsx"
        ]
      },
      {
        "name": "Authentication System",
        "description": "User authentication with signup, login, password reset, and session management",
        "files": [
          "app/login/page.tsx",
          "app/signup/page.tsx",
          "app/forgot-password/page.tsx",
          "app/auth/reset-password/page.tsx",
          "lib/auth-helpers.ts",
          "lib/supabase-client.ts",
          "lib/supabase-server.ts",
          "middleware.ts"
        ]
      },
      {
        "name": "Dashboard",
        "description": "Main user dashboard with navigation and various management sections",
        "files": [
          "app/dashboard/layout.tsx",
          "app/dashboard/page.tsx",
          "components/TrialStatusBanner.tsx",
          "components/UsageQuota.tsx"
        ]
      },
      {
        "name": "Agent Management",
        "description": "AI agent creation, configuration, and management system",
        "files": [
          "app/dashboard/agents/page.tsx",
          "app/create-agent/page.tsx",
          "components/CreateAgentModal.tsx",
          "components/CallAgentButton.tsx",
          "components/VoiceChat.tsx",
          "app/api/create-agent/route.ts",
          "app/api/agents/[id]/configure-llm/route.ts",
          "app/api/agents/[id]/configure-tts/route.ts"
        ]
      },
      {
        "name": "Call Management",
        "description": "Phone call handling, inbound calls, call status tracking, and speech processing",
        "files": [
          "app/dashboard/calls/page.tsx",
          "app/dashboard/phone/page.tsx",
          "app/api/call/inbound/route.ts",
          "app/api/call/process-speech/route.ts",
          "app/api/call/complete/route.ts",
          "app/api/call/check-trial/route.ts",
          "app/api/twilio/call-status/route.ts",
          "app/api/twilio/transcript/route.ts"
        ]
      },
      {
        "name": "Lead Management",
        "description": "Lead capture, extraction, and delivery system",
        "files": [
          "app/dashboard/leads/page.tsx",
          "app/api/leads/extract/route.ts",
          "app/api/leads/deliver/route.ts"
        ]
      },
      {
        "name": "Payment System",
        "description": "Payment processing with Flutterwave integration and billing management",
        "files": [
          "app/dashboard/payments/page.tsx",
          "app/dashboard/billing/page.tsx",
          "app/dashboard/upgrade/page.tsx",
          "app/api/create-payment-link/route.ts",
          "app/api/flutterwave-webhook/route.ts",
          "lib/flutterwave.ts"
        ]
      },
      {
        "name": "TTS/Voice Generation",
        "description": "Text-to-speech generation and voice management",
        "files": [
          "app/api/generate-voice/route.ts",
          "app/api/tts/voices/route.ts",
          "app/api/tts/test-voice/route.ts",
          "lib/services/tts/odiadev.ts",
          "lib/odiadev-tts.ts"
        ]
      },
      {
        "name": "Chat Widget",
        "description": "Floating chat widget with voice and text capabilities",
        "files": [
          "components/ChatWidget.tsx",
          "app/api/chat/widget/route.ts",
          "lib/groq-chat-widget.ts",
          "components/support/float-chat.tsx"
        ]
      },
      {
        "name": "LLM Integration",
        "description": "Large Language Model integration with Groq SDK",
        "files": [
          "lib/services/llm/groq.ts"
        ]
      },
      {
        "name": "Speech-to-Text",
        "description": "Speech recognition and transcription services",
        "files": [
          "lib/services/stt/deepgram.ts"
        ]
      },
      {
        "name": "Agent Orchestration",
        "description": "Core agent orchestration and conversation management",
        "files": [
          "lib/services/agent-orchestrator.ts",
          "lib/services/conversation-manager.ts"
        ]
      },
      {
        "name": "Free Trial System",
        "description": "Free trial management and usage tracking",
        "files": [
          "app/api/trial/status/route.ts",
          "app/api/trial/record-usage/route.ts",
          "lib/free-trial.ts",
          "lib/usage.ts"
        ]
      },
      {
        "name": "WhatsApp Integration",
        "description": "WhatsApp messaging capabilities",
        "files": [
          "app/api/whatsapp/send/route.ts"
        ]
      },
      {
        "name": "Support System",
        "description": "Customer support and assistant functionality",
        "files": [
          "app/api/support/assistant/route.ts"
        ]
      },
      {
        "name": "Data Export",
        "description": "Data export utilities for CSV and JSON formats",
        "files": [
          "lib/exportData.ts"
        ]
      },
      {
        "name": "Test Mode",
        "description": "Testing and development mode functionality",
        "files": [
          "lib/test-mode.ts",
          "components/TestAdminPanel.tsx"
        ]
      },
      {
        "name": "Health Monitoring",
        "description": "API health checks and monitoring",
        "files": [
          "app/api/health/route.ts",
          "app/api/usage-report/route.ts"
        ]
      },
      {
        "name": "Static Pages",
        "description": "Static content pages for legal and informational content",
        "files": [
          "app/contact/page.tsx",
          "app/privacy/page.tsx",
          "app/terms/page.tsx",
          "app/success/page.tsx"
        ]
      },
      {
        "name": "UI Components",
        "description": "Reusable UI components and utilities",
        "files": [
          "components/LoadingSkeleton.tsx",
          "components/ErrorBoundary.tsx",
          "components/Logo.tsx",
          "components/QuickAgentTest.tsx",
          "hooks/useChat.ts"
        ]
      },
      {
        "name": "Configuration",
        "description": "Application configuration and environment setup",
        "files": [
          "next.config.js",
          "tailwind.config.ts",
          "tsconfig.json",
          "vercel.json",
          "package.json"
        ]
      }
    ]
  }
}
