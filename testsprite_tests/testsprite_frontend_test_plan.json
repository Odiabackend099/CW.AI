[
  {
    "id": "TC001",
    "title": "Chat Bubble Rendering and Toggle",
    "description": "Verify that the floating chat bubble appears correctly on the web page and toggles the expandable chat window with smooth animations when clicked.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Load the web page containing the CallWaiting AI Chat Widget."
      },
      {
        "type": "assertion",
        "description": "Check that the floating chat bubble is visible and positioned correctly on the screen."
      },
      {
        "type": "action",
        "description": "Click the floating chat bubble."
      },
      {
        "type": "assertion",
        "description": "Verify that the chat window expands smoothly with animation and displays the input options."
      },
      {
        "type": "action",
        "description": "Click the chat bubble again to toggle the chat window."
      },
      {
        "type": "assertion",
        "description": "Verify that the chat window collapses smoothly and the bubble returns to initial state."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Text Chat Input and AI Response",
    "description": "Check that the text input accepts user messages, triggers AI response generation via webhook, and displays the AI text reply with a loading indicator.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open the chat window from the chat bubble."
      },
      {
        "type": "action",
        "description": "Select text input mode if not already selected."
      },
      {
        "type": "action",
        "description": "Type a valid text message in the input field."
      },
      {
        "type": "action",
        "description": "Click the send button."
      },
      {
        "type": "assertion",
        "description": "Observe that a loading indicator appears while waiting for the AI response."
      },
      {
        "type": "assertion",
        "description": "Verify that the AI-generated text reply is displayed in the chat window upon response."
      },
      {
        "type": "assertion",
        "description": "Confirm that the AI response text is context-aware, professional in tone, and concise (~100 words)."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Voice Chat Mode Activation and Microphone Permission",
    "description": "Validate that the voice chat mode activates microphone access properly and shows visual recording timer upon starting voice input.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open the chat window."
      },
      {
        "type": "action",
        "description": "Toggle voice chat mode."
      },
      {
        "type": "assertion",
        "description": "Verify that the browser prompts for microphone permissions."
      },
      {
        "type": "action",
        "description": "Allow microphone permission."
      },
      {
        "type": "assertion",
        "description": "Verify that the recording UI is displayed with a visual timer counting the recording duration."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Voice Recording, Sending and AI Response with Audio Playback",
    "description": "Test full flow of recording a voice message, sending it via the webhook, receiving AI text and audio response, and automatic playback of audio.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Ensure voice chat mode is active with microphone permission granted."
      },
      {
        "type": "action",
        "description": "Press record button to start voice recording."
      },
      {
        "type": "action",
        "description": "Speak a short message clearly for a few seconds."
      },
      {
        "type": "action",
        "description": "Stop the recording."
      },
      {
        "type": "assertion",
        "description": "Verify the voice message is sent to the webhook via HTTP POST."
      },
      {
        "type": "assertion",
        "description": "Verify that a loading indicator appears while awaiting the response."
      },
      {
        "type": "assertion",
        "description": "Check that the chat window displays the AI-generated text reply."
      },
      {
        "type": "assertion",
        "description": "Confirm that the audio response URL is received and the MP3 audio plays automatically with clear and natural sound."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Webhook Valid JSON Response Validation",
    "description": "Ensure that the configured n8n cloud webhook returns valid JSON responses containing both required 'text' and 'audio_url' fields for given valid inputs.",
    "category": "integration",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send a test POST request with a valid text payload to the webhook URL."
      },
      {
        "type": "assertion",
        "description": "Verify the webhook response is valid JSON."
      },
      {
        "type": "assertion",
        "description": "Verify the response contains non-empty 'text' and 'audio_url' fields."
      },
      {
        "type": "action",
        "description": "Send a test POST request with a valid voice payload to the webhook."
      },
      {
        "type": "assertion",
        "description": "Verify webhook returns valid JSON including 'text' and 'audio_url' fields."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Error Handling and User Feedback on Webhook Failures",
    "description": "Verify that the chat widget correctly displays user-friendly error messages and logs debug information when errors occur during webhook calls or AI/TTS processing.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate webhook error by sending invalid payload or disconnecting webhook endpoint."
      },
      {
        "type": "assertion",
        "description": "Verify that the chat widget displays an informative error message to the user."
      },
      {
        "type": "assertion",
        "description": "Confirm that debug information is logged to the in-browser console for troubleshooting."
      },
      {
        "type": "action",
        "description": "Simulate TTS API failure response."
      },
      {
        "type": "assertion",
        "description": "Verify appropriate error message and fallback behavior in chat widget."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "UI Responsiveness and Accessibility",
    "description": "Test that the chat widget UI components (bubble, chat window, buttons, timers, text input) render and function correctly across different viewport sizes and support accessibility standards.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Load the chat widget on various screen sizes including desktop, tablet, and mobile."
      },
      {
        "type": "assertion",
        "description": "Verify that UI layouts adapt responsively without overflow or cutoff."
      },
      {
        "type": "assertion",
        "description": "Check that all interactive elements have appropriate ARIA labels and keyboard focusable."
      },
      {
        "type": "action",
        "description": "Navigate the widget using keyboard only and operate chat input and toggles."
      },
      {
        "type": "assertion",
        "description": "Confirm smooth keyboard navigation and accessibility compliance."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Import and Validation of Ready n8n Workflows",
    "description": "Verify that all provided n8n workflows (simple echo test, full AI + TTS, production optimizations) import into n8n cloud without errors and respond correctly to test payloads.",
    "category": "integration",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Import the simple echo test workflow into n8n cloud."
      },
      {
        "type": "assertion",
        "description": "Confirm there are no import errors and the workflow is deployed."
      },
      {
        "type": "action",
        "description": "Trigger the workflow with a test message."
      },
      {
        "type": "assertion",
        "description": "Validate the workflow returns an echo response correctly."
      },
      {
        "type": "action",
        "description": "Import the full AI + TTS workflow."
      },
      {
        "type": "assertion",
        "description": "Verify successful deployment and correct response generation for text and audio URL."
      },
      {
        "type": "action",
        "description": "Import the production-optimized workflow and test similarly."
      },
      {
        "type": "assertion",
        "description": "Confirm robust response handling under typical load conditions."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Security Practices Enforcement",
    "description": "Validate that API key management, environment variable usage, CORS restrictions, HTTPS enforcement, and rate limiting are implemented as per security requirements.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Verify API keys and secrets are not exposed in client-side code."
      },
      {
        "type": "assertion",
        "description": "Confirm environment variables are used for sensitive information."
      },
      {
        "type": "action",
        "description": "Attempt cross-origin requests disallowed by CORS policy."
      },
      {
        "type": "assertion",
        "description": "Verify server rejects unauthorized cross-origin requests."
      },
      {
        "type": "action",
        "description": "Access the chat widget over HTTP (non-HTTPS)."
      },
      {
        "type": "assertion",
        "description": "Confirm connection is redirected/enforced to use HTTPS."
      },
      {
        "type": "action",
        "description": "Send multiple rapid requests to API endpoints."
      },
      {
        "type": "assertion",
        "description": "Verify rate limiting triggers and blocks excessive usage."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Performance Testing of AI Response Time",
    "description": "Ensure that AI responses are generated and returned within 3 seconds under typical load to meet performance requirements.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send multiple chat input requests sequentially and concurrently via text and voice."
      },
      {
        "type": "assertion",
        "description": "Measure and record response times from request to AI text response receipt."
      },
      {
        "type": "assertion",
        "description": "Verify that at least 90% of responses return within 3 seconds under typical load."
      },
      {
        "type": "assertion",
        "description": "Check that audio synthesis and playback latency is acceptable for real-time conversation."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Documentation Completeness and Accuracy",
    "description": "Confirm that comprehensive documentation is available covering setup, troubleshooting, deployment, and testing of the CallWaiting AI Chat Widget.",
    "category": "documentation",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Review setup guide for installation, configuration, and environment requirements."
      },
      {
        "type": "assertion",
        "description": "Verify the setup guide provides clear step-by-step instructions and examples."
      },
      {
        "type": "action",
        "description": "Review troubleshooting section for common errors and debugging tools."
      },
      {
        "type": "assertion",
        "description": "Confirm troubleshooting guidance is comprehensive and actionable."
      },
      {
        "type": "action",
        "description": "Inspect deployment guide for security, scalability, and monitoring considerations."
      },
      {
        "type": "assertion",
        "description": "Verify best practices are documented and easy to follow."
      },
      {
        "type": "action",
        "description": "Check availability of test scripts and usage instructions."
      },
      {
        "type": "assertion",
        "description": "Confirm test procedures enable quick and reliable validation of integration and performance."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Multi-turn Conversation Continuity",
    "description": "Validate that the chat widget maintains conversation context across multiple user inputs and AI responses for coherent multi-turn dialogs.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send an initial message via text input."
      },
      {
        "type": "assertion",
        "description": "Verify AI response is contextually accurate and relevant."
      },
      {
        "type": "action",
        "description": "Send a follow-up message referring to the previous response."
      },
      {
        "type": "assertion",
        "description": "Confirm AI response correctly maintains context from the conversation history."
      },
      {
        "type": "action",
        "description": "Repeat for multiple turns to test conversation memory and relevance."
      },
      {
        "type": "assertion",
        "description": "Ensure no loss of context or unrelated answers."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Audio Playback Configuration Testing",
    "description": "Verify that the MiniMax TTS female voice is correctly configured and that auto-playback of AI audio responses works with proper volume and clarity settings.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Send a chat message to trigger an audio response."
      },
      {
        "type": "assertion",
        "description": "Confirm the audio response uses the configured female voice."
      },
      {
        "type": "assertion",
        "description": "Verify that the audio plays automatically upon response."
      },
      {
        "type": "assertion",
        "description": "Check audio clarity, volume, and absence of artifacts."
      },
      {
        "type": "action",
        "description": "Change TTS voice configuration and repeat test to validate voice switching."
      }
    ]
  }
]
